// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package dbmodel

import (
	"time"
)

const TableNameChatHistoryEvent = "chat_history_event"

// ChatHistoryEvent 聊天记录事件表
type ChatHistoryEvent struct {
	ID         int32     `gorm:"column:id;primaryKey;autoIncrement:true;comment:Primary Key" json:"id"` // Primary Key
	Userid     int32     `gorm:"column:userid;not null;comment:user id" json:"userid"`                  // user id
	Botid      int32     `gorm:"column:botid;not null;comment:bot id" json:"botid"`                     // bot id
	StartMsgid int32     `gorm:"column:start_msgid;not null;comment:记录开始id" json:"start_msgid"`         // 记录开始id
	EndMsgid   int32     `gorm:"column:end_msgid;not null;comment:记录开始id" json:"end_msgid"`             // 记录开始id
	DateStr    string    `gorm:"column:date_str;not null;comment:事件时间" json:"date_str"`                 // 事件时间
	Event      string    `gorm:"column:event;comment:事件描述" json:"event"`                                // 事件描述
	Addr       string    `gorm:"column:addr;not null;default:' ';comment:地点" json:"addr"`               // 地点
	Todo       string    `gorm:"column:todo;not null;default:'  ';comment:代办项" json:"todo"`             // 代办项
	Emotional  string    `gorm:"column:emotional;not null;default:' ';comment:情绪状态" json:"emotional"`   // 情绪状态
	CreatedAt  time.Time `gorm:"column:created_at;not null;default:CURRENT_TIMESTAMP" json:"created_at"`
	UpdatedAt  time.Time `gorm:"column:updated_at;not null;default:CURRENT_TIMESTAMP" json:"updated_at"`
}

// TableName ChatHistoryEvent's table name
func (*ChatHistoryEvent) TableName() string {
	return TableNameChatHistoryEvent
}
